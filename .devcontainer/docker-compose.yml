version: '3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        INSTALL_ZSH: "false"
        UPGRADE_PACKAGES: "true"

    volumes:
      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker-host.sock
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/workspace:cached

    # Overrides default command so things don't shut down after the process ends.
    entrypoint: /usr/local/share/docker-init.sh
    command: sleep infinity
    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Uncomment the next line to use a non-root user for all processes.
    user: vscode

    environment:
        # env variables used for psql
      - PGHOST=localhost
      - PGUSER=postgres

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  postgres:
    container_name: postgres
    image: postgis/postgis:13-master
    restart: unless-stopped
    network_mode: service:app
    environment:
      - POSTGRES_PASSWORD=postgres

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  redis:
    container_name: redis
    image: redis:7
    restart: unless-stopped
    network_mode: service:app

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: unless-stopped
    network_mode: service:app
    environment:
      - RABBITMQ_NODENAME=mq
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  docker-registry:
    container_name: docker-registry
    image: registry:2
    restart: unless-stopped
    network_mode: service:app
    env_file:
      - .devcontainer.env
    volumes:
      - ./volume/docker-registry/certs:/certs
  