version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Use the VARIANT arg to pick a Debian OS version: buster, bullseye
        # Use bullseye when on local on arm64/Apple Silicon.
        VARIANT:  bullseye
    env_file:
        # Ensure that the variables in .env match the same variables in devcontainer.json
        - devcontainer.env
    # Security Opt and cap_add for C++ based debuggers to work.
    # See `runArgs`: https://github.com/Microsoft/vscode-docs/blob/main/docs/remote/devcontainerjson-reference.md
    # security_opt:
    #   - seccomp:unconfined
    # cap_add:
    #   - SYS_PTRACE

    volumes:
      - ..:/workspace:cached

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.

    # Uncomment the next line to use a non-root user for all processes.
    # user: vscode

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  db:
    image: postgis/postgis:13-master
    restart: unless-stopped
    env_file:
        # Ensure that the variables in .env match the same variables in devcontainer.json
        - devcontainer.env
    network_mode: service:app

    # Add "forwardPorts": ["5432"] to **devcontainer.json** to forward PostgreSQL locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  redis:
    image: redis:7
    restart: always
    network_mode: service:app

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    network_mode: service:app
    env_file:
        # Ensure that the variables in .env match the same variables in devcontainer.json
        - devcontainer.env
